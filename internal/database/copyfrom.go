// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package database

import (
	"context"
)

// iteratorForCreateUsersHasInterests implements pgx.CopyFromSource.
type iteratorForCreateUsersHasInterests struct {
	rows                 []CreateUsersHasInterestsParams
	skippedFirstNextCall bool
}

func (r *iteratorForCreateUsersHasInterests) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForCreateUsersHasInterests) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].UserID,
		r.rows[0].InterestID,
		r.rows[0].CreatedAt,
		r.rows[0].UpdatedAt,
	}, nil
}

func (r iteratorForCreateUsersHasInterests) Err() error {
	return nil
}

func (q *Queries) CreateUsersHasInterests(ctx context.Context, arg []CreateUsersHasInterestsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"users_has_interests"}, []string{"user_id", "interest_id", "created_at", "updated_at"}, &iteratorForCreateUsersHasInterests{rows: arg})
}
